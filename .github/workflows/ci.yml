name: Main Workflow

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]
  release:
    types: [published]

jobs:
  lint:
    if: github.event_name != 'release'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci
      - name: Run ESLint
        run: npx eslint 'src/**/*.{js,jsx,ts,tsx}'
      - name: Check formatting with Prettier
        run: npx prettier --check .

  test:
    if: github.event_name != 'release'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm test -- --watchAll=false
      - name: Test Coverage
        run: npm test -- --coverage --watchAll=false
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage/lcov.info

  release-please:
    if: github.event_name == 'push'
    needs: [security, lint, test]
    runs-on: ubuntu-latest
    steps:
      - name: Release Please
        uses: google-github-actions/release-please-action@v4
        with:
          release-type: node
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  upload-artifact:
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build
      - name: Zip build output
        run: zip -r build.zip ./build
      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: build.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
