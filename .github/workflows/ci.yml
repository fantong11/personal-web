name: Main Workflow

permissions:
  contents: write
  pull-requests: write

on:
  push:
    branches: [develop, release]
  pull_request:
    branches: [develop, release]
  release:
    types: [published]

jobs:
  lint:
    if: github.event_name != 'release'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci
      - name: Run ESLint
        run: npx eslint 'src/**/*.{js,jsx,ts,tsx}'
      - name: Check formatting with Prettier
        run: npx prettier --check .

  test:
    if: github.event_name != 'release'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci
      - name: Run tests
        run: npm test -- --watchAll=false
      - name: Test Coverage
        run: npm test -- --coverage --watchAll=false
      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v4
        with:
          files: ./coverage/lcov.info

  release-please:
    # 只在 release branch push 時跑，產生 PR 到 main
    if: github.ref == 'refs/heads/release' && github.event_name == 'push'
    needs: [lint, test]
    runs-on: ubuntu-latest
    steps:
      - name: Release Please
        uses: googleapis/release-please-action@v4
        with:
          release-type: node
          target-branch: master # 指定要產生 PR 的目標分支
          # 預設 source-branch 就是目前所在的 branch (release)
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  upload-artifact:
    # 只有 Release Please 合併 PR 產生 release tag 時才 deploy
    if: github.event_name == 'release'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20
      - name: Install dependencies
        run: npm ci
      - name: Build
        run: npm run build
      - name: Zip build output
        run: zip -r build.zip ./build
      - name: Upload to GitHub Release
        uses: softprops/action-gh-release@v2
        with:
          files: build.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
